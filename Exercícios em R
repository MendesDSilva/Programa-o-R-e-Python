  ---
Formação Cientista de Dados - Prof. Fernando Amaral
Faça você mesmo
---

1.Crie duas variáveis Ana e Paulo e atribua a elas valores de suas idades, sendo respectivamente 8 e 12 anos. As variáveis devem ser do tipo inteiro. Imprima no console "A menina é mais velha" ou "O menino é mais velho" como resultado de um teste lógico.
```{r}
Ana=8L
Paulo=12L
if (Ana > Paulo)
  print("A menina é mais velha")else
  print("O menino é mais velho")
```
BOD é um objeto existente no R. Verifique qual a classe deste objeto.

```{r}
class(BOD)
```
Crie um vetor que armazene números de 1 a 10 e posteriormente imprima os valores pares
```{r}
numeros = c(1,2,3,4,5,6,7,8,9,10)
for (i in numeros) {
  if (numeros[i]%%2==0)
    print(numeros[i]) 
}
```
women é um dataframe existente no R. Imprima as 10 últimas linhas
```{r}
tail(women, n=10)
```
Use a função plot do R para produzir um gráfico do atributos Sepal.Width e Petal.Length do conjunto de dados Iris. O gráfico deve imprimir apenas das linhas 50 até 100.
```{r}
novairis = iris[50:100,c(2,3)]
plot(novairis)
```
Crie dois vetores de tamanhos iguais, some as posições equivalentes dos vetores e imprima o resultado.
```{r}
vet1 = c(1,2,3,4)
vet2 = c(4,3,2,1)
print(vet1 + vet2)
```
Imprima o número de linhas, de colunas, nomes das linhas e nome das colunas do conjunto de dados CO2.
```{r}
dim(CO2)[1]
dim(CO2)[2]
rownames(CO2)
colnames(CO2)
```


---
Formação Cientista de Dados
Limpeza e Tratamento de Dados
---

```{r}
#importa dados, string vazio como NA, string como fatores
dados = read.csv("Tempo.csv", sep = ";", na.strings="", stringsAsFactors=T)
head(dados)
summary(dados)
```
Explorar Dados, Aparência
```{r}
#aparencia
counts = table(dados$Aparencia)
counts
barplot(counts, main="Aparencia", xlab="Aparencia")
#Gênero
counts = table(dados$Vento)
counts
barplot(counts, main="Vento", xlab="Vento")
#jogar
counts = table(dados$Jogar)
counts
barplot(counts, main="Jogar", xlab="Jogar")
```
Explorar, colunas numéricas
```{r}
#Temperatura
summary(dados$Temperatura)
boxplot(dados$Temperatura)
hist(dados$Temperatura)
```
Umidade
```{r}
summary(dados$Umidade)
boxplot(dados$Umidade)
hist(dados$Umidade)
```
Valore faltantes - NAs
```{r}
#valores faltantes NAs
dados[!complete.cases(dados),]
```
Aparência, tratar dominio
```{r}
summary(dados$Aparencia)
#não temos NAs
dados[is.na(dados$Aparencia),]
#opção, preencher com mediana
#subtituição com moda
dados[dados$Aparencia == 'menos' ,]$Aparencia = 'sol' 
#buscamos novamente aparencias
summary(dados$Aparencia)
#remover levels não utilizados
dados$Aparencia =   factor(dados$Aparencia)
#visualizar novamente
summary(dados$Aparencia)
```
Temperatura - tratar dominio
```{r}
summary(dados$Temperatura)
#fora do dominio, numérico - ver idades anormais
dados[dados$Temperatura < -130 | dados$Temperatura > 130 ,]$Temperatura
#não temos NAs
dados[is.na(dados$Temperatura),]
#opção, preencher com mediana
median(dados$Temperatura)
#subtituição
dados[dados$Temperatura < -135 | dados$Temperatura > 130 ,]$Temperatura = median(dados$Temperatura) 
#buscamos novamente temperaturas anormais
dados[dados$Temperatura< -135 | dados$Temperatura > 130 ,]$Temperatura
summary(dados$Temperatura)
```
Umidade, dominio e NAs
```{r}
summary(dados$Umidade)
#fora do dominio, numérico - ver idades anormais
dados[dados$Umidade < 0 | dados$Umidade > 100 ,]$Umidade
#Verifica NAs
dados[is.na(dados$Umidade),]
#atribuir mediana a NAs
dados[is.na(dados$Umidade),]$Umidade = median(dados$Umidade,na.rm = T)
#subtituição
dados[dados$Umidade < 0 | dados$Umidade > 100 ,]$Umidade = median(dados$Umidade) 
#buscamos novamente idades anormais
dados[dados$Umidade < 0 | dados$Umidade > 100 ,]
summary(dados$Umidade)
```
Vento NAs
```{r}
summary(dados$Vento)
#Verifica NAs
dados[is.na(dados$Vento),]
#substitui
dados[is.na(dados$Vento),]$Vento = 'FALSO'
#Verifica NAs
dados[is.na(dados$Vento),]
summary(dados$Vento)
```
